version: "3.1"
services:


  web_server:
    image: nginx
    container_name: web_server
    ports:
      - 80:80
      - 443:443
    networks:
      - cmplr
    restart: on-failure
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf #. is not supposed to be ~ as the file is stored in the repo
      - ~/nginx/nginx.key:/etc/nginx/certs/nginx.key
      - ~/nginx/nginx-certificate.crt:/etc/nginx/certs/nginx-certificate.crt


  frontend:
    image: osamamagdy/cmplr_frontend:latest
    container_name: frontend
    networks:
      - cmplr
    restart: on-failure
    depends_on:
      - backend


  backend:
    image: osamamagdy/cmplr_backend:latest
    container_name: backend
    networks:
      - cmplr
    depends_on:
      - db
    restart: on-failure
    volumes:
      - backend-storage:/var/www/storage/

  db:
    image: postgres
    container_name: db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_ROOT_PASSWORD: ${DB_PASSWORD}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: pgsql
    volumes:
      - ./docker-compose/pgsql:/docker-entrypoint-initdb.d
      - postgres-data:/var/lib/postgresql/data
    networks:
      - cmplr
  
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADMIN_PASSWORD}
    networks:
      - cmplr




networks:
  cmplr:
    driver: bridge
volumes:
  postgres-data:
  backend-storage:
